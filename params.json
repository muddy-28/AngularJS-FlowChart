{"name":"Angularjs-flowchart","tagline":"A WebUI control for visualizing and editing flow charts","body":"AngularJS-FlowChart\r\n===================\r\n\r\nA WebUI control for visualizing and editing flow charts.\r\n\r\nThis isn't designed to be completely general purpose, but it will be a good basis if you need an SVG flowchart and you are willing to work with AngularJS.\r\n\r\nCode Project Article\r\n--------------------\r\n\r\nhttp://www.codeproject.com/Articles/709340/Implementing-a-Flowchart-with-SVG-and-AngularJS\r\n\r\n\r\nHow to use it\r\n-------------\r\n\r\nInclude the following Javascript in your HTML file:\r\n\r\n```html\r\n\t<script src=\"flowchart/svg_class.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"flowchart/mouse_capture_service.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"flowchart/dragging_service.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"flowchart/flowchart_viewmodel.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"flowchart/flowchart_directive.js\" type=\"text/javascript\"></script>\r\n```\r\n\r\nMake a dependency on the the flowchart's AngularJS module from your application (or other module):\r\n\r\n```javascript\r\n\tangular.module('app', ['flowChart', ])\r\n```\r\n\r\nIn your application (or other) controller setup a data-model for the initial flowchart (or AJAX the data-model in from a JSON resource):\r\n\r\n```javascript\r\n\tvar chartDataModel = {\r\n\r\n\t\tnodes: [\r\n\t\t\t{\r\n\t\t\t\tname: \"Example Node 1\",\r\n\t\t\t\tid: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\tinputConnectors: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"A\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"B\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"C\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\toutputConnectors: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"A\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"B\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"C\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tname: \"Example Node 2\",\r\n\t\t\t\tid: 1,\r\n\t\t\t\tx: 400,\r\n\t\t\t\ty: 200,\r\n\t\t\t\tinputConnectors: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"A\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"B\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"C\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\toutputConnectors: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"A\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"B\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"C\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\r\n\t\t],\r\n\r\n\t\tconnections: [\r\n\t\t\t{\r\n\t\t\t\tsource: {\r\n\t\t\t\t\tnodeID: 0,\r\n\t\t\t\t\tconnectorIndex: 1,\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdest: {\r\n\t\t\t\t\tnodeID: 1,\r\n\t\t\t\t\tconnectorIndex: 2,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\r\n\r\n\t\t]\r\n\t};\r\n```\r\n\r\nAlso in your controller, wrap the data-model in a view-model and add it to the AngularJS scope:\r\n\r\n```javascript\r\n\t$scope.chartViewModel = new flowchart.ChartViewModel(chartDataModel);\r\n```\r\n\r\nYour code is in direct control of creation of the view-model, so you can interact with it in almost anyway you want.\r\n\r\nFinally instantiate the flowchart's AngularJS directive in your HTML:\r\n\r\n```html\r\n    <flow-chart\r\n\t\tstyle=\"margin: 5px; width: 100%; height: 100%;\"\r\n      \tchart=\"chartViewModel\"\r\n      \t>\r\n    </flow-chart>\r\n```\r\n\r\nBe sure to bind your view-model as the 'chart' attribute!\r\n\r\n\r\nHave fun and please contribute!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}